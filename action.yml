name: "mssql suite-v2"
branding:
  icon: "database"
  color: "yellow"
description: "Installs a SQL Server suite of tools including sqlcmd, bcp, sqlpackage, db engine and localdb for Windows, macOS and Linux."
inputs:
  install:
    description: "The apps to install"
    required: true
    default: "sqlengine"
  sa-password:
    description: "The sa password for the SQL instance"
    required: false
    default: "Qwe12345"
  show-log:
    description: "Show the log file for the docker container"
    required: false
    default: "false"
  collation:
    description: "Change the collation associated with the SQL Server instance"
    required: false
    default: "Latin1_General_CI_AS_KS"
  version:
    description: "The version of SQL Server to install in year format"
    required: false
    default: "2019"
  download-path:
    description: "The path of SQL Server to download in local env"
    required: false
    default: "C:\temp"
  download-only:
    description: "Set this to true for only downloading"
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: download windows installers
      if: ${{ inputs.download-only == 'true' }}
      shell: pwsh
      run: |
        $params = @{
            path    = "${{ inputs.download-path }}"
            version = "${{ inputs.version }}"
        }

        ${{ github.action_path }}/download.ps1 @params

    - id: psoutput
      if: ${{ inputs.download-only != 'true' }}
      continue-on-error: true
      shell: pwsh
      env:
        ACCEPT_EULA: "Y"
        HOMEBREW_ACCEPT_EULA: "Y"
        HOMEBREW_NO_INSTALL_CLEANUP: "Y"
        SA_PASSWORD: ${{ inputs.sa-password }}
        MSSQL_AGENT_ENABLED: "true"
      run: |
        Write-Output "Getting variables for suite"

        $params = @{
            Install         = ("${{ inputs.install }}" -split ",").Trim()
            SaPassword      = "${{ inputs.sa-password }}"
            ShowLog         = ${{ inputs.show-log }}
            Collation       = "${{ inputs.Collation }}"
            Version         = "${{ inputs.Version }}"
            Path            = "${{ inputs.download-path }}"
        }

        ${{ github.action_path }}/main.ps1 @params

    - id: retry psoutput
      if: steps.psoutput.outcome != 'success'
      shell: pwsh
      env:
        ACCEPT_EULA: "Y"
        HOMEBREW_ACCEPT_EULA: "Y"
        HOMEBREW_NO_INSTALL_CLEANUP: "Y"
        SA_PASSWORD: ${{ inputs.sa-password }}
        MSSQL_AGENT_ENABLED: "true"
      run: |
        Write-Output "Getting variables for suite"

        $params = @{
            Install         = ("${{ inputs.install }}" -split ",").Trim()
            SaPassword      = "${{ inputs.sa-password }}"
            ShowLog         = ${{ inputs.show-log }}
            Collation       = "${{ inputs.Collation }}"
            Version         = "${{ inputs.Version }}"
            Path            = "${{ inputs.download-path }}"
        }

        ${{ github.action_path }}/main.ps1 @params
